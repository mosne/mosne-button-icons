{"version":3,"file":"button-icons.js","mappings":"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","sources":["webpack://mosne-button-icons/./node_modules/@wordpress/icons/build-module/library/list-item.js","webpack://mosne-button-icons/./src/InspectorControls.js","webpack://mosne-button-icons/./src/ToolbarButton.js","webpack://mosne-button-icons/external window \"ReactJSXRuntime\"","webpack://mosne-button-icons/external window [\"wp\",\"blockEditor\"]","webpack://mosne-button-icons/external window [\"wp\",\"blocks\"]","webpack://mosne-button-icons/external window [\"wp\",\"components\"]","webpack://mosne-button-icons/external window [\"wp\",\"data\"]","webpack://mosne-button-icons/external window [\"wp\",\"hooks\"]","webpack://mosne-button-icons/external window [\"wp\",\"i18n\"]","webpack://mosne-button-icons/external window [\"wp\",\"primitives\"]","webpack://mosne-button-icons/external window [\"wp\",\"richText\"]","webpack://mosne-button-icons/./node_modules/classnames/index.js","webpack://mosne-button-icons/webpack/bootstrap","webpack://mosne-button-icons/webpack/runtime/compat get default export","webpack://mosne-button-icons/webpack/runtime/define property getters","webpack://mosne-button-icons/webpack/runtime/hasOwnProperty shorthand","webpack://mosne-button-icons/webpack/runtime/make namespace object","webpack://mosne-button-icons/./src/button-icons.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst listItem = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M12 11v1.5h8V11h-8zm-6-1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n  })\n});\nexport default listItem;\n//# sourceMappingURL=list-item.js.map","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {__} from '@wordpress/i18n';\nimport {addFilter, applyFilters} from '@wordpress/hooks';\nimport {InspectorControls} from '@wordpress/block-editor';\nimport {\n    Button,\n    PanelRow,\n    __experimentalGrid as Grid, // eslint-disable-line\n} from '@wordpress/components';\n\n/**\n * All available icons.\n * (Order determines ptygjhyresentation order)\n */\n\n\n/**\n * Add the attributes needed for button icons.\n *\n * @since 0.1.0\n * @param {Object} settings\n */\nfunction addAttributes(settings) {\n    if ('core/button' !== settings.name) {\n        return settings;\n    }\n\n    // Add the block visibility attributes.\n    const iconAttributes = {\n        icon: {\n            type: 'string',\n        }\n    };\n\n    const newSettings = {\n        ...settings,\n        attributes: {\n            ...settings.attributes,\n            ...iconAttributes,\n        },\n    };\n\n    return newSettings;\n}\n\naddFilter(\n    'blocks.registerBlockType',\n    'mosne-button-icons/add-attributes',\n    addAttributes\n);\n\n/**\n * Filter the BlockEdit object and add icon inspector controls to button blocks.\n *\n * @since 0.1.0\n * @param {Object} BlockEdit\n */\nfunction addInspectorControls(BlockEdit) {\n    return (props) => {\n        if (props.name !== 'core/button') {\n            return <BlockEdit {...props} />;\n        }\n\n        const {attributes, setAttributes} = props;\n        const {icon: currentIcon} = attributes;\n        // Get the icons from the filter and set a default\n        // icon can be filtered by block name\n        const ICONS = applyFilters(\n            'mosne-button-icons.icons',\n            [\n                {\n                    label: __('Arrow Right', 'mosne-button-icons'),\n                    value: 'arrow-right',\n                },\n                {\n                    label: __('Arrow Left', 'mosne-button-icons'),\n                    value: 'arrow-left',\n                },\n                {\n                    label: __('Download', 'mosne-button-icons'),\n                    value: 'download',\n                },\n                {\n                    label: __('External', 'mosne-button-icons'),\n                    value: 'external',\n                },\n            ],\n            props.name\n        );\n        return (\n            <>\n                <BlockEdit {...props} />\n                <InspectorControls group=\"color\">\n                    <div className=\"button-icon-picker\">\n                        <Grid\n                            className=\"block-editor-block-styles__variants\"\n                            columns=\"2\"\n                            gap=\"4\"\n                        >\n                            {ICONS.map((icon, index) => (\n                                <Button\n                                    key={index}\n                                    label={icon?.label}\n                                    isPressed={currentIcon === icon.value}\n                                    className=\"components-button is-secondary block-editor-block-styles__item-text\"\n                                    onClick={() =>\n                                        setAttributes({\n                                            // Allow user to disable icons.\n                                            icon:\n                                                currentIcon === icon.value\n                                                    ? null\n                                                    : icon.value,\n                                        })\n                                    }\n                                >\n                                    <span className=\"components-truncate\">\n                                        {icon.label}\n                                    </span>\n                                </Button>\n                            ))}\n                        </Grid>\n                    </div>\n                </InspectorControls>\n            </>\n        );\n    };\n}\n\naddFilter(\n    'editor.BlockEdit',\n    'mosne-button-icons/add-inspector-controls',\n    addInspectorControls\n);\n\n/**\n * Add icon and position classes in the Editor.\n *\n * @since 0.1.0\n * @param {Object} BlockListBlock\n */\nfunction addClasses(BlockListBlock) {\n    return (props) => {\n        const {name, attributes} = props;\n\n        if ('core/button' !== name || !attributes?.icon) {\n            return <BlockListBlock {...props} />;\n        }\n\n        const classes = classnames(props?.className, {\n            [`has-icon has-icon__${attributes?.icon}`]: attributes?.icon,\n        });\n\n        return <BlockListBlock {...props} className={classes}/>;\n    };\n}\n\naddFilter(\n    'editor.BlockListBlock',\n    'mosne-button-icons/add-classes',\n    addClasses\n);\n\nfunction addClassesSave(props, blockType, attributes) {\n    if ('core/button' !== blockType.name) {\n        return props;\n    }\n\n    props.className = classnames(props.className, {\n        [`has-icon__${attributes?.icon}`]: attributes?.icon,\n    });\n\n    return props;\n}\n\naddFilter(\n    'blocks.getSaveContent.extraProps',\n    'mosne-button-icons/add-classes-save',\n    addClassesSave\n);\n","import { RichTextToolbarButton } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { registerFormatType, toggleFormat, insert, insertObject } from '@wordpress/rich-text';\nimport {registerBlockVariation} from '@wordpress/blocks';\nimport { listItem } from '@wordpress/icons';\n\nconst { __ } = wp.i18n;\nconst name = 'mosne/button-icon-inline';\nconst title = __( 'Inline icon' );\n\nconst ButtonIconsEdit = ( { isActive, onChange, onFocus, value } ) => {\n\n\n    const selectedBlock = useSelect( ( select ) => {\n        return select( 'core/block-editor' ).getSelectedBlock();\n    }, [] );\n\n    // allow only in button blocks\n    if ( selectedBlock && selectedBlock.name !== 'core/button' ) {\n        return null;\n    }\n\n    return (\n        <>\n            <RichTextToolbarButton\n                  icon={ listItem }\n                  title={ title}\n                  onClick={ () => {\n                      onChange(\n                          toggleFormat( value, {\n                              type: name,\n                          } ),\n                          onFocus()\n                      );\n                  } }\n                  isActive={ isActive }\n                  role=\"menuitemcheckbox\"\n              />\n        </>\n    );\n};\n\nregisterFormatType( name, {\n    title: title,\n    name: name,\n    tagName: 'span',\n    className: 'wp-block-button__icon',\n    ariaHidden: true,\n    edit: ButtonIconsEdit,\n} );\n\n\nregisterBlockVariation('core/button', {\n  name: 'button-icon-right',\n  title: 'Icon right',\n  attributes: {\n    text: 'Button <span class=\"wp-block-button__icon\" aria-hidde=\"true\">+</span>',\n    url: '',\n  },\n});\n\nregisterBlockVariation('core/button', {\n  name: 'button-icon-left',\n  title: 'Icon left',\n  attributes: {\n    text: '<span class=\"wp-block-button__icon\" aria-hidde=\"true\">+</span> Button',\n    url: '',\n  },\n});","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"richText\"];","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Button icons tools\nimport './InspectorControls.js';\nimport './ToolbarButton.js';"],"names":["classnames","__","addFilter","applyFilters","InspectorControls","Button","PanelRow","__experimentalGrid","Grid","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","addAttributes","settings","name","iconAttributes","icon","type","newSettings","attributes","addInspectorControls","BlockEdit","props","setAttributes","currentIcon","ICONS","label","value","children","group","className","columns","gap","map","index","isPressed","onClick","addClasses","BlockListBlock","classes","addClassesSave","blockType","RichTextToolbarButton","useSelect","registerFormatType","toggleFormat","insert","insertObject","registerBlockVariation","listItem","wp","i18n","title","ButtonIconsEdit","isActive","onChange","onFocus","selectedBlock","select","getSelectedBlock","role","tagName","ariaHidden","edit","text","url"],"sourceRoot":""}